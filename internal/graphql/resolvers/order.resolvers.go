package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.76

import (
	"context"
	"fmt"
	"learning/internal/graphql/models"
)

// CreateOrder is the resolver for the createOrder field.
func (r *mutationResolver) CreateOrder(ctx context.Context, input models.CreateOrderInput) (*models.CreateOrderPayload, error) {
	panic(fmt.Errorf("not implemented: CreateOrder - createOrder"))
}

// UpdateOrderStatus is the resolver for the updateOrderStatus field.
func (r *mutationResolver) UpdateOrderStatus(ctx context.Context, input models.UpdateOrderStatusInput) (*models.UpdateOrderStatusPayload, error) {
	panic(fmt.Errorf("not implemented: UpdateOrderStatus - updateOrderStatus"))
}

// CancelOrder is the resolver for the cancelOrder field.
func (r *mutationResolver) CancelOrder(ctx context.Context, input models.CancelOrderInput) (*models.CancelOrderPayload, error) {
	panic(fmt.Errorf("not implemented: CancelOrder - cancelOrder"))
}

// Order is the resolver for the order field.
func (r *queryResolver) Order(ctx context.Context, id string) (*models.Order, error) {
	panic(fmt.Errorf("not implemented: Order - order"))
}

// Orders is the resolver for the orders field.
func (r *queryResolver) Orders(ctx context.Context, first *int, after *string, last *int, before *string, userID *string, status *models.OrderStatus, dateFrom *string, dateTo *string) (*models.OrderConnection, error) {
	panic(fmt.Errorf("not implemented: Orders - orders"))
}

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	func (r *orderResolver) User(ctx context.Context, obj *order.Order) (*user.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}
func (r *orderResolver) ItemCount(ctx context.Context, obj *order.Order) (int, error) {
	panic(fmt.Errorf("not implemented: ItemCount - itemCount"))
}
func (r *orderResolver) CanBeCancelled(ctx context.Context, obj *order.Order) (bool, error) {
	panic(fmt.Errorf("not implemented: CanBeCancelled - canBeCancelled"))
}
func (r *orderItemResolver) Product(ctx context.Context, obj *order.OrderItem) (*product.Product, error) {
	panic(fmt.Errorf("not implemented: Product - product"))
}
func (r *Resolver) Order() generated.OrderResolver { return &orderResolver{r} }
func (r *Resolver) OrderItem() generated.OrderItemResolver { return &orderItemResolver{r} }
type orderResolver struct{ *Resolver }
type orderItemResolver struct{ *Resolver }
*/
