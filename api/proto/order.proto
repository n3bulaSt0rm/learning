syntax = "proto3";

package order;

option go_package = "learning/pkg/order/pb";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

// Order service definition
service OrderService {
  // Create a new order
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse) {
    option (google.api.http) = {
      post: "/api/v1/orders"
      body: "*"
    };
  }
  
  // Get order by ID
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {
    option (google.api.http) = {
      get: "/api/v1/orders/{id}"
    };
  }
  
  // Update order status
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse) {
    option (google.api.http) = {
      put: "/api/v1/orders/{id}/status"
      body: "*"
    };
  }
  
  // List orders by user
  rpc ListOrdersByUser(ListOrdersByUserRequest) returns (ListOrdersByUserResponse) {
    option (google.api.http) = {
      get: "/api/v1/users/{user_id}/orders"
    };
  }
  
  // List all orders
  rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse) {
    option (google.api.http) = {
      get: "/api/v1/orders"
    };
  }
}

// Order status enum
enum OrderStatus {
  ORDER_STATUS_UNSPECIFIED = 0;
  ORDER_STATUS_PENDING = 1;
  ORDER_STATUS_CONFIRMED = 2;
  ORDER_STATUS_PROCESSING = 3;
  ORDER_STATUS_SHIPPED = 4;
  ORDER_STATUS_DELIVERED = 5;
  ORDER_STATUS_CANCELLED = 6;
}

// Order item model
message OrderItem {
  string id = 1;
  string product_id = 2;
  string product_name = 3;
  double product_price = 4;
  int32 quantity = 5;
  double total = 6;
}

// Order model
message Order {
  string id = 1;
  string user_id = 2;
  repeated OrderItem items = 3;
  double total_amount = 4;
  OrderStatus status = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

// Request/Response messages
message OrderItemRequest {
  string product_id = 1;
  int32 quantity = 2;
}

message CreateOrderRequest {
  string user_id = 1;
  repeated OrderItemRequest items = 2;
}

message CreateOrderResponse {
  Order order = 1;
}

message GetOrderRequest {
  string id = 1;
}

message GetOrderResponse {
  Order order = 1;
}

message UpdateOrderStatusRequest {
  string id = 1;
  OrderStatus status = 2;
}

message UpdateOrderStatusResponse {
  Order order = 1;
}

message ListOrdersByUserRequest {
  string user_id = 1;
  int32 page = 2;
  int32 page_size = 3;
}

message ListOrdersByUserResponse {
  repeated Order orders = 1;
  int32 total = 2;
  int32 page = 3;
  int32 page_size = 4;
}

message ListOrdersRequest {
  int32 page = 1;
  int32 page_size = 2;
  OrderStatus status = 3;
}

message ListOrdersResponse {
  repeated Order orders = 1;
  int32 total = 2;
  int32 page = 3;
  int32 page_size = 4;
} 